{"ast":null,"code":"var _jsxFileName = \"/home/fillopfy/Desktop/react/foodApp/foodapp/src/Components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor() {\n    console.log(\"Constructor\", this);\n  }\n\n  handleIncrement() {\n    console.log(\"Increment clicked!\", this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, this.format()), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      onClick: this.handleIncrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Increment\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, this.state.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, tag))));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count == 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  format() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/fillopfy/Desktop/react/foodApp/foodapp/src/Components/counter.jsx"],"names":["React","Component","Counter","constructor","console","log","handleIncrement","render","getBadgeClasses","format","state","tags","map","tag","classes","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAO9BE,EAAAA,WAAW,GAAE;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,IAA1B;AACH;;AAEDC,EAAAA,eAAe,GAAG;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,IAAlC;AACD;;AAIDE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,MAAL,EAA1C,CADF,eAEE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,OAAO,EAAE,KAAKH,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAqBC,GAAD,iBACnB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADD,CADH,CATF,CADF;AAiBD;;AAEDL,EAAAA,eAAe,GAAG;AAChB,QAAIM,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKJ,KAAL,CAAWK,KAAX,IAAoB,CAApB,GAAwB,SAAxB,GAAoC,SAA/C;AACA,WAAOD,OAAP;AACD;;AAEDL,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEM,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,WAAOK,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA9C6B;;AAiDhC,eAAeb,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    imageURL: \"https://picsum.photos/200\",\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n\n  constructor(){\n      console.log(\"Constructor\",this);\n  }\n\n  handleIncrement() {\n    console.log(\"Increment clicked!\", this);\n  }\n\n  \n\n  render() {\n    return (\n      <React.Fragment>\n        <span className={this.getBadgeClasses()}>{this.format()}</span>\n        <button\n          className=\"btn btn-secondary btn-sm\"\n          onClick={this.handleIncrement}\n        >\n          Increment\n        </button>\n\n        <ul>\n          {this.state.tags.map((tag) => (\n            <li key={tag}>{tag}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count == 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  format() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}